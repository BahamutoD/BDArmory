PART
{
// Kerbal Space Program - Part Config
// 
// 

// --- general parameters ---
name = radarDataReceiver
module = Part
author = BahamutoD

// --- asset parameters ---
mesh = model.mu
rescaleFactor = 1


// --- node definitions ---
node_attach = 0.0, 0, 0, 0, -1, 0, 0


// --- editor parameters ---
TechRequired = precisionEngineering
entryCost = 2100
cost = 600
category = none
subcategory = 0
title = Radar Data Receiver
manufacturer = Bahamuto Dynamics
description = A module that can display radar contacts via data-link and lock targets through a remote radar, but can not scan or lock by itself.  Useful for a hidden missile battery.
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,0,1

// --- standard part parameters ---
mass = 0.05
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
maxTemp = 3600

physicsSignificance = 1


MODULE
{
        name = ModuleRadar

        // -- Section: General Configuration --
        radarName = Radar Data Receiver		// if left empty part.title is used, but advised to set this to a nice printable text
        //rwrThreatType = 0				// IMPORTANT, please set correctly:
                                // 0 = SAM site radar
                                // 1 = Fighter radar (airborne)
                                // 2 = AWACS radar (airborne)
                                // 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
                                // 5 = Detection radar (ground/ship based)
                                // 6 = SONAR (ship/submarine based)
        //rotationTransformName = scanRotation
	    //turretID = 0					// if needed
        resourceDrain = 0.25				// change to higher values for more capable radars, e.g AESA

        // -- Section: Capabilities --
        //omnidirectional = true				// false: boresight scan radar
        //directionalFieldOfView = 90			// for ominidrectional only
        //boresightFOV = 10				// for boresight only
        //scanRotationSpeed = 240				// degress per second
        //lockRotationSpeed = 120				// only relevant if canLock
        //lockRotationAngle = 4
        //showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
        //multiLockFOV = 30				// only relevant if canLock
        //lockAttemptFOV = 2				// only relevant if canLock
        //maxLocks = 1					//how many targets can be locked/tracked simultaneously. only relevant if canLock

        canScan = false					// scanning/detecting targets (volume search)
        canLock = false					// locking/tracking targets (fire control)
        canTrackWhileScan = false			// continue scanning while tracking a locked target
        canRecieveRadarData = true			// can work as passive data receiver (NOTE THE SPELLING! [SIC])

        //minSignalThreshold = 350				// DEPRECATED, NO LONGER USED! use detection float curve!
        //minLockedSignalThreshold = 120			// DEPRECATED, NO LONGER USED! use locktrack float curve!

        //radarGroundClutterFactor = 0.1			// how much is the radar efficiency reduced to by ground clutter/look-down?
                                // 0.0 = reduced to 0% (very hard to detect ground targets)
                                // 1.0 = fully efficient (no difference between air & ground targets)
                                // values >1.0 are possible, meaning the radar is MORE efficient during look down than vs aireal targets.

        radarDetectionCurve
        {
          // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
          // this defines both min/max range of the radar, and sensitivity/efficiency
          // it is recommended to define an "assured detection range", at which all craft are detected regardless
          //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
          //        key = distance	rcs

    		// nothing defined here as this radar does not support scanning on its own
        }

        radarLockTrackCurve
        {
            // same as detectionCurve, just for locking/tracking purpose
            // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
            //   ECM-jammers completely ineffective!!
            //   Min cross section for locking should always be at least 1 m^2, even at range 0km!
            //      key = distance	rcs

    		// nothing defined here as this radar does not support locking
        }
}



}
